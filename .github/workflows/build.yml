name: All

on:
  # Run on all changes to these branches
  push:
    branches:
      - main
      - develop
  # Run only if PR exists
  pull_request:
    types: [assigned, opened, synchronize, reopened]

env:
  TURBO_TEAM: ${{ vars.TURBO_TEAM }}
  TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
  PNPM_VERSION: 9.0.5

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      # Git Checkout
      - uses: actions/checkout@v3
        with:
          submodules: true
      # Foundry Setup (anvil)
      - name: Install Foundry
        uses: foundry-rs/foundry-toolchain@v1
      # Node Setup
      - uses: actions/setup-node@v3
        with:
          node-version: "18.19"
      # Java Setup
      # - uses: actions/setup-java@v3
      # with:
      # distribution: "oracle"
      # java-version: "17"
      # Firebase Binary Cache
      # - name: Get Firebase Library Versions For Binary Caching
      # if: ${{ !env.ACT }}
      # id: cache-settings
      # run: |
      # echo "::set-output name=firebase-tools::$(npm list -s --depth=0 | grep firebase-tools | tail -n 1 | sed 's/.*@//g')"
      # - name: Cache Firebase Emulator Binaries
      # if: ${{ !env.ACT }}
      # uses: actions/cache@v3
      # with:
      # path: ~/.cache/firebase/emulators
      # key: ${{ runner.os }}-firebase-${{ steps.cache-settings.outputs.firebase-tools }}
      # PNPM Setup
      - uses: pnpm/action-setup@v2.0.1
        name: Install pnpm
        id: pnpm-install
        with:
          version: ${{env.PNPM_VERSION}}
          run_install: false
      # Get pnpm store directory
      - name: Set pnpm store directory
        if: ${{ !env.ACT }}
        id: pnpm-cache
        run: |
          echo "::set-output name=pnpm_cache_dir::$(pnpm store path)"
      # Setup pnpm cache
      - uses: actions/cache@v3
        if: ${{ !env.ACT }}
        name: Setup pnpm cache
        with:
          path: ${{ steps.pnpm-cache.outputs.pnpm_cache_dir }}
          key: ${{ runner.os }}-pnpm-${{env.PNPM_VERSION}}-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-${{env.PNPM_VERSION}}-store-
      # Install
      - run: pnpm i
        name: Install dependencies
      # Dependencies
      - run: pnpm run depcheck
        name: Dependency Check
      - run: pnpm run syncpack
        name: Dependency Synced Versioning Check
      - run: pnpm run madge
        name: Circular dependency check
      # Build
      - run: pnpm run build
        name: Build All
        # Lint
      - run: pnpm run lint
        name: Lint All
      # Test
      - run: pnpm run test
        name: Test All
